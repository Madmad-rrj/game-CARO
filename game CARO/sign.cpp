#pragma once
#include <iostream>
#include "Header.h"
#include <Windows.h>
using namespace std;

void SetColor(int mauchu, int mauBg) {
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hStdOut, (mauBg << 4) | mauchu);
}
void donothing()
{
	return;
}
void box1()
{
	//SetColor(4, 15);
	gotoXY(36, 15); cout << u8R"(╔═════════════════════════════════════════════╗)";
	gotoXY(36, 16); cout << u8R"(║     BẠN CÓ MUỐN TIẾP TỤC CHƠI ? (Y)/(N)     ║)";
	gotoXY(36, 17); cout << u8R"(╚═════════════════════════════════════════════╝)";
	return;
}
void enter_fileName_box()
{
	//SetColor(4, 15);
	gotoXY(30, 15); cout << u8R"(╔═════════════════════════════════════════════════════════════╗)";
	gotoXY(30, 16); cout << u8R"(║ NHẬP TÊN FILE LƯU:                                          ║)";
	gotoXY(30, 17); cout << u8R"(╚═════════════════════════════════════════════════════════════╝)";
	gotoXY(34, 18); cout << u8"---Vui long nhap ten file duoi 8 ky tu---";
	return;
}
void box0()
{
	gotoXY(27, 0);  cout << u8R"(╔═══════════════════════════════════════════════════════════════╗)";
	gotoXY(27, 1);  cout << u8R"(║                            ROUND                              ║)";
	gotoXY(27, 2);  cout << u8R"(╠═══════════════════════════════╦═══════════════════════════════╣)";
	gotoXY(27, 3);  cout << u8R"(║ PLAYER 1                      ║ PLAYER 2                      ║)";
	gotoXY(27, 4);  cout << u8R"(║ SCORE                         ║ SCORE                         ║)";
	gotoXY(27, 5);  cout << u8R"(║                               ║                               ║)";
	gotoXY(27, 6);  cout << u8R"(╚═══════════════════════════════╩═══════════════════════════════╝)";

}
void square_cell(int x, int y)
{
    gotoXY(x - 2, y - 1);  cout << u8R"(╔═══╗)";
    gotoXY(x - 2, y);      cout << u8R"(║   ║)";
    gotoXY(x - 2, y + 1);  cout << u8R"(╚═══╝)";
}

void square_cell_parent(int x, int y)
{

    SetColor(15, 0);
    if (x == Mother_Point_x)
    {
        if (y == Mother_Point_y)
        {
            gotoXY(x - 2, y - 1);  cout << u8R"(╔═══╦)";
            gotoXY(x - 2, y);      cout << u8R"(║   ║)";
            gotoXY(x - 2, y + 1);  cout << u8R"(╠═══╬)";
        }
        else if (y == Mother_Point_y + 18)
        {
            
            gotoXY(x - 2, y - 1);  cout << u8R"(╠═══╬)";
            gotoXY(x - 2, y);      cout << u8R"(║   ║)";
            gotoXY(x - 2, y + 1);  cout << u8R"(╚═══╩)";
        }
        else
        {
            gotoXY(x - 2, y - 1);  cout << u8R"(╠═══╬)";
            gotoXY(x - 2, y);      cout << u8R"(║   ║)";
            gotoXY(x - 2, y + 1);  cout << u8R"(╠═══╬)";
        }
    }
    else if (x == Mother_Point_x + 36)
    {
        if (y == Mother_Point_y)
        {
            gotoXY(x - 2, y - 1);  cout << u8R"(╦═══╗)";
            gotoXY(x - 2, y);      cout << u8R"(║   ║)";
            gotoXY(x - 2, y + 1);  cout << u8R"(╬═══╣)";
        }
        else if (y == Mother_Point_y + 18)
        {

            gotoXY(x - 2, y - 1);  cout << u8R"(╬═══╣)";
            gotoXY(x - 2, y);      cout << u8R"(║   ║)";
            gotoXY(x - 2, y + 1);  cout << u8R"(╩═══╝)";
        }
        else
        {
            gotoXY(x - 2, y - 1);  cout << u8R"(╬═══╣)";
            gotoXY(x - 2, y);      cout << u8R"(║   ║)";
            gotoXY(x - 2, y + 1);  cout << u8R"(╬═══╣)";
        }
    }
    else if (y == Mother_Point_y)
    {
        gotoXY(x - 2, y - 1);  cout << u8R"(╔═══╗)";
        gotoXY(x - 2, y);      cout << u8R"(║   ║)";
        gotoXY(x - 2, y + 1);  cout << u8R"(╬═══╬)";

    }
    else if (y == Mother_Point_y + 18)
    {
        gotoXY(x - 2, y - 1);  cout << u8R"(╬═══╬)";
        gotoXY(x - 2, y);      cout << u8R"(║   ║)";
        gotoXY(x - 2, y + 1);  cout << u8R"(╚═══╝)";

    }
    else
    {
        gotoXY(x - 2, y - 1);  cout << u8R"(╬═══╬)";
        gotoXY(x - 2, y);      cout << u8R"(║   ║)";
        gotoXY(x - 2, y + 1);  cout << u8R"(╬═══╬)";
    }
}

void Character_1(int x, int y) {
    int mang2[28][24] = {
    {15,15,15,15,15,7,15,15,7,0,0,15,7,0,0,0,15,15,15,15,15,15,15,15},
    {15,15,15,15,7,0,7,7,0,0,0,7,0,0,0,8,7,15,7,7,7,15,15,15},
    {15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,15,15},
    {15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15},
    {15,15,15,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15},
    {15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15},
    {15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15},
    {15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15},
    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,8,8,8,0},
    {7,0,0,0,0,0,0,0,0,0,8,0,0,8,8,0,0,0,0,0,7,15,15,15},
    {15,7,0,0,0,0,0,0,0,8,0,0,8,7,7,8,0,0,0,0,0,7,15,15},
    {15,15,0,0,0,0,0,0,0,8,0,7,6,7,7,8,0,0,0,0,0,0,15,15},
    {15,15,7,0,0,0,0,0,8,7,8,15,7,7,7,6,0,0,0,0,0,7,15,15},
    {15,15,15,0,8,0,8,8,7,7,7,7,7,7,7,8,0,8,7,15,15,15,15,15},
    {15,15,15,0,8,7,7,7,7,7,7,7,7,7,7,7,6,7,15,15,15,15,15,15},
    {15,15,15,7,0,8,8,4,7,7,7,7,7,7,7,7,8,8,15,15,15,15,15,15},
    {15,15,15,7,0,0,0,0,8,7,7,7,8,8,7,8,4,15,15,15,15,15,15,15},
    {15,15,7,0,0,0,0,0,0,6,7,7,7,7,8,4,7,15,15,15,15,15,15,15},
    {15,15,0,0,0,0,0,0,4,8,8,8,8,6,4,7,15,15,15,15,15,15,15,15},
    {15,15,15,7,0,0,8,8,8,8,8,0,0,7,15,15,15,15,15,15,15,15,15,15},
    {15,15,15,15,7,8,7,15,15,8,8,0,7,15,15,15,15,15,15,15,15,15,15,15},
    {15,15,15,15,8,7,7,7,15,7,8,8,0,0,15,15,15,15,15,15,15,15,15,15},
    {15,15,15,15,8,8,8,8,7,7,7,15,8,7,8,15,15,15,15,15,15,15,15,15},
    {15,15,7,0,8,8,8,8,8,8,7,15,7,7,0,15,15,15,15,15,15,15,15,15},
    {15,15,0,0,0,0,8,8,6,8,8,15,15,7,7,8,15,15,15,15,15,15,15,15},
    {15,7,0,3,3,3,0,8,8,8,8,7,15,7,7,0,15,15,15,15,15,15,15,15},
    {15,15,0,1,8,8,0,8,8,3,8,8,15,7,8,0,15,15,15,15,15,15,15,15},
    };


    SetConsoleOutputCP(CP_UTF8);
    for (int i = 0; i < 28; i += 2)
    {
        gotoXY(x, y + i / 2);
        for (int x = 0; x < 24; x++) {
            SetColor(mang2[i + 1][x], mang2[i][x]);

            cout << u8"▄";
        }
        std::cout << endl;

    }
    SetColor(15, 0);
}
void Character_2(int x, int y) {
    int mang2[28][24] = {
    {15,15,15,15,15,15,15,15,15,15,8,0,0,8,15,15,15,15,15,15,15,15,15,15},
    {15,15,15,15,15,15,15,15,8,8,8,8,4,4,4,0,8,15,15,15,15,15,15,15},
    {15,15,15,15,15,15,7,8,8,4,8,8,8,4,4,4,4,8,8,15,15,15,15,15},
    {15,15,15,15,15,7,8,4,8,8,8,8,8,8,8,8,8,4,4,7,15,15,15,15},
    {15,15,15,15,7,8,4,8,8,8,8,8,4,8,8,8,8,8,4,0,15,15,15,15},
    {15,15,15,15,8,4,8,8,8,8,8,8,3,4,8,8,8,8,4,8,15,15,15,15},
    {15,15,15,15,8,4,8,8,8,8,4,8,8,8,8,8,8,4,8,7,8,15,15,15},
    {15,15,15,15,8,4,8,8,8,8,4,8,8,8,8,8,8,4,8,7,8,15,15,15},
    {15,15,15,7,8,4,8,4,8,8,8,8,8,4,8,8,8,8,8,7,8,15,15,15},
    {15,15,15,8,6,8,8,8,4,8,8,8,4,8,8,8,8,8,7,7,8,15,15,15},
    {15,15,7,7,8,8,4,4,4,0,1,0,4,4,4,8,4,8,7,8,0,7,15,15},
    {15,8,8,7,7,4,5,8,8,8,8,8,8,8,8,4,4,8,15,8,0,15,15,15},
    {7,8,8,8,7,0,1,8,8,8,8,8,8,8,8,0,0,8,7,8,0,7,15,15},
    {8,7,7,0,3,8,8,0,0,0,0,8,8,8,8,1,0,0,0,0,6,8,7,15},
    {8,8,7,4,0,0,4,8,0,6,8,4,0,0,8,8,0,4,6,8,8,8,8,0},
    {7,8,8,8,8,0,6,7,3,8,7,8,8,0,8,7,6,6,6,8,8,8,4,8},
    {7,8,6,8,8,4,8,7,8,8,7,7,7,8,8,7,8,4,4,6,8,4,8,15},
    {8,6,6,8,6,6,8,7,7,8,7,7,7,8,8,7,8,4,0,6,4,0,7,15},
    {7,8,8,8,0,4,0,8,7,7,7,7,7,8,7,8,6,4,0,6,6,4,0,7},
    {7,7,8,8,8,0,0,8,7,8,7,7,7,7,7,8,4,0,4,4,0,0,7,15},
    {8,8,8,8,8,0,0,6,8,8,7,7,7,7,8,0,0,0,6,4,8,8,15,15},
    {1,1,7,15,0,0,6,0,8,8,8,8,8,7,6,0,0,8,4,0,15,15,15,15},
    {3,0,7,15,0,0,4,6,0,0,8,7,7,8,0,6,8,7,4,0,15,15,15,15},
    {3,0,7,15,7,7,7,6,8,8,4,8,8,0,3,0,8,15,7,7,15,15,15,15},
    {1,0,7,15,15,8,8,0,8,7,8,8,8,3,3,1,0,8,8,15,15,15,15,15},
    {1,0,7,7,7,0,0,0,1,7,8,8,8,8,3,3,0,0,0,7,15,15,15,15},
    {3,0,7,0,0,0,0,0,1,8,8,8,8,3,3,3,3,3,1,0,7,15,15,15},
    {1,1,0,3,3,0,1,8,0,1,8,8,3,3,3,3,3,3,3,3,0,7,15,15},
    };


    SetConsoleOutputCP(CP_UTF8);
    for (int i = 0; i < 28; i += 2)
    {
        gotoXY(x, y + i / 2);
        for (int x = 0; x < 24; x++) {
            SetColor(mang2[i + 1][x], mang2[i][x]);

            cout << u8"▄";
        }
        std::cout << endl;

    }
    SetColor(15, 0);
}
void frameListGame(int numberOfFile)
{
    int x = 45, y = 2;
    gotoXY(x, y); cout << u8R"(╔════════════════════════════╗)";
    for (int i = 0; i < numberOfFile; i++)
    {
        gotoXY(x, y + i + 1); cout << u8R"(║)";
        gotoXY(x + 29, y + i + 1); cout << u8R"(║)";
    }
    gotoXY(x, y + numberOfFile + 1); cout << u8R"(╚════════════════════════════╝)";

}

void delete_button(int x, int y)
{
    gotoXY(x - 2, y - 1);  cout << u8R"(╔═══╗)";
    gotoXY(x - 2, y);      cout << u8R"(║ D ║ to Delete Game)";
    gotoXY(x - 2, y + 1);  cout << u8R"(╚═══╝)";
}
void load_button(int x, int y)
{
    gotoXY(x - 2, y - 1);  cout << u8R"(╔═══╗)";
    gotoXY(x - 2, y);      cout << u8R"(║ L ║ to Load Game)";
    gotoXY(x - 2, y + 1);  cout << u8R"(╚═══╝)";
}
void No_file_found()
{
    //SetColor(4, 15);
    gotoXY(36, 15); cout << u8R"(╔═════════════════════════════════════════════╗)";
    gotoXY(36, 16); cout << u8R"(║              KHÔNG TÌM THẤY FILE            ║)";
    gotoXY(36, 17); cout << u8R"(╚═════════════════════════════════════════════╝)";
    return;
}
void print_Step(int x, int y, string target)
{
    SetColor(15, 0);
    gotoXY(x, y);  cout << target;
}
void print_Target_color_order(int x, int y, string target, int color)
{
    SetColor(color, 0);
    gotoXY(x, y);  
    if (target == "X")
        cout << u8"X";
    else
        cout << u8"O";
}
void print_X_Bright(int x, int y)
{
    int mang2[17][17] = {
        {13,13,13,12,0,0,0,0,0,0,0,0,0,13,13,13,12},
        {13,4,4,13,12,0,0,0,0,0,0,0,13,4,4,13,12},
        {13,4,4,4,13,12,0,0,0,0,0,13,4,4,4,13,12},
        {0,13,4,4,4,13,12,0,0,0,13,4,4,4,13,12,0},
        {0,0,13,15,4,4,13,12,12,13,4,4,4,13,12,0,0},
        {0,0,0,13,15,4,4,13,13,4,4,4,13,12,0,0,0},
        {0,0,0,0,13,15,4,4,4,4,4,13,12,0,0,0,0},
        {0,0,0,0,0,13,15,4,4,4,13,12,0,0,0,0,0},
        {0,0,0,0,0,13,4,4,4,4,13,12,0,0,0,0,0},
        {0,0,0,0,13,4,4,4,4,4,4,13,12,0,0,0,0},
        {0,0,0,13,4,4,4,13,12,4,4,4,13,12,0,0,0},
        {0,0,13,4,4,4,13,12,12,13,4,4,4,13,12,0,0},
        {0,13,4,4,4,13,12,0,0,0,13,4,4,4,13,12,0},
        {13,4,4,4,13,12,0,0,0,0,0,13,4,4,4,13,12},
        {13,4,4,13,12,0,0,0,0,0,0,0,13,4,4,13,12},
        {13,13,13,12,0,0,0,0,0,0,0,0,0,13,13,13,12},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };


    SetConsoleOutputCP(CP_UTF8);
    for (int i = 0; i < 16; i += 2)
    {
        gotoXY(x, y + i / 2);
        for (int x = 0; x < 17; x++) {
            SetColor(mang2[i + 1][x], mang2[i][x]);

            cout << u8"▄";
        }
        std::cout << endl;

    }
    SetColor(15, 0);
}
void print_X_Dark(int x, int y)
{
    int mang2[17][17] = {
        {8,8,8,7,0,0,0,0,0,0,0,0,0,8,8,8,7},
        {8,0,0,8,7,0,0,0,0,0,0,0,8,0,0,8,7},
        {8,0,0,0,8,7,0,0,0,0,0,8,0,0,0,8,7},
        {0,8,0,0,0,8,7,0,0,0,8,0,0,0,8,7,0},
        {0,0,8,15,0,0,8,7,7,8,0,0,0,8,7,0,0},
        {0,0,0,8,15,0,0,8,8,0,0,0,8,7,0,0,0},
        {0,0,0,0,8,15,0,0,0,0,0,8,7,0,0,0,0},
        {0,0,0,0,0,8,15,0,0,0,8,7,0,0,0,0,0},
        {0,0,0,0,0,8,0,0,0,0,8,7,0,0,0,0,0},
        {0,0,0,0,8,0,0,0,0,0,0,8,7,0,0,0,0},
        {0,0,0,8,0,0,0,8,7,0,0,0,8,7,0,0,0},
        {0,0,8,0,0,0,8,7,7,8,0,0,0,8,7,0,0},
        {0,8,0,0,0,8,7,0,0,0,8,0,0,0,8,7,0},
        {8,0,0,0,8,7,0,0,0,0,0,8,0,0,0,8,7},
        {8,0,0,8,7,0,0,0,0,0,0,0,8,0,0,8,7},
        {8,8,8,7,0,0,0,0,0,0,0,0,0,8,8,8,7},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };


    SetConsoleOutputCP(CP_UTF8);
    for (int i = 0; i < 16; i += 2)
    {
        gotoXY(x, y + i / 2);
        for (int x = 0; x < 17; x++) {
            SetColor(mang2[i + 1][x], mang2[i][x]);

            cout << u8"▄";
        }
        std::cout << endl;

    }
    SetColor(15, 0);
}
void print_O_Bright(int x, int y)
{
    int mang2[17][17] = {
        {0,0,0,0,0,11,11,11,11,11,11,9,0,0,0,0,0},
    {0,0,0,0,11,1,1,1,1,1,1,11,9,0,0,0,0},
    {0,0,0,11,1,1,9,0,0,0,1,1,11,9,0,0,0},
    {0,0,11,1,1,9,0,0,0,0,0,1,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,9,0,0,0,0,0,0,0,1,11,9,0,0},
    {0,0,11,1,1,9,0,0,0,0,0,1,1,11,9,0,0},
    {0,0,0,11,1,1,9,0,0,0,1,1,11,9,0,0,0},
    {0,0,0,0,11,1,1,1,1,1,1,11,9,0,0,0,0},
    {0,0,0,0,0,11,11,11,11,11,11,9,0,0,0,0,0}
    };



    SetConsoleOutputCP(CP_UTF8);
    for (int i = 0; i < 16; i += 2)
    {
        gotoXY(x, y + i / 2);
        for (int x = 0; x < 17; x++) {
            SetColor(mang2[i + 1][x], mang2[i][x]);

            cout << u8"▄";
        }
        std::cout << endl;

    }
    SetColor(15, 0);
}
void print_O_Dark(int x, int y)
{
    int mang2[17][17] = {
            {0,0,0,0,0,7,7,7,7,7,7,8,0,0,0,0,0},
    {0,0,0,0,7,15,15,15,15,15,15,7,8,0,0,0,0},
    {0,0,0,7,15,15,8,0,0,0,15,15,7,8,0,0,0},
    {0,0,7,15,15,8,0,0,0,0,0,15,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,8,0,0,0,0,0,0,0,15,7,8,0,0},
    {0,0,7,15,15,8,0,0,0,0,0,15,15,7,8,0,0},
    {0,0,0,7,15,15,8,0,0,0,15,15,7,8,0,0,0},
    {0,0,0,0,7,15,15,15,15,15,15,7,8,0,0,0,0},
    {0,0,0,0,0,7,7,7,7,7,7,8,0,0,0,0,0}
    };



    SetConsoleOutputCP(CP_UTF8);
    for (int i = 0; i < 16; i += 2)
    {
        gotoXY(x, y + i / 2);
        for (int x = 0; x < 17; x++) {
            SetColor(mang2[i + 1][x], mang2[i][x]);

            cout << u8"▄";
        }
        std::cout << endl;

    }
    SetColor(15, 0);
}
void Enter_Name_Box()
{
    SetConsoleOutputCP(CP_UTF8);
    gotoXY(55, 5); cout << u8"Player Registration";
    gotoXY(15, 8);  cout << u8R"(╔══════════════════════════════════════════════════╗)";
    gotoXY(15, 9);  cout << u8R"(║ NHẬP TÊN PLAYER 1:                               ║)";
    gotoXY(15, 10); cout << u8R"(╚══════════════════════════════════════════════════╝)";
    gotoXY(20, 11); cout << u8"---Vui long nhap ten duoi 8 ky tu---";
    gotoXY(15, 15); cout << u8R"(╔══════════════════════════════════════════════════╗)";
    gotoXY(15, 16); cout << u8R"(║ NHẬP TÊN PLAYER 2:                               ║)";
    gotoXY(15, 17); cout << u8R"(╚══════════════════════════════════════════════════╝)";
    gotoXY(20, 18); cout << u8"---Vui long nhap ten duoi 8 ky tu---";
}
void escape_button(int x, int y)
{
    gotoXY(x - 2, y - 1);  cout << u8R"(╔═══╗)";
    gotoXY(x - 2, y);      cout << u8R"(║esc║ to Escape Game)";
    gotoXY(x - 2, y + 1);  cout << u8R"(╚═══╝)";
}
void DrawSquirtle(int a, int b) {
    // Mảng 2D lưu mã  cho từng ô vuông (chỉ là ví dụ nhỏ)
    int upperSquirtle[28][33] = {
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0, 11, 11, 11,  3,  3,  0, 15, 15, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 11,  0, 11, 11, 11, 11, 11, 11,  0, 11,  0,  0,  3,  3,  3,  3,  0, 15, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0, 15, 15,  0,  3,  3,  3,  0, 15, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0, 15,  0, 11, 11, 11, 11, 11, 11, 11,  0,  0, 15, 15,  0,  0,  3,  3,  3,  0, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0, 11, 11, 11, 11, 11, 11, 11,  0,  0,  0,  0, 15,  0,  3,  3,  3,  0, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0, 11, 11, 11, 11, 11, 11, 11,  0,  0,  0, 12, 15,  0,  3,  3,  3,  3,  0, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0, 12,  0, 11, 11, 11, 11, 11, 11, 11,  0,  0,  0, 12, 15,  0,  3,  3,  3,  3,  0, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0, 12, 12, 12, 15,  0,  3,  3,  3,  3,  0, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15,  0,  3,  0, 11,  0, 11, 11, 11, 11, 11, 11, 11,  0,  0,  0,  0,  3,  3,  3,  3,  3,  0, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15,  0,  0,  3,  3,  3,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  0,  3,  3,  3,  3,  0, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15,  0,  3,  0,  0,  0,  3,  3,  3,  3,  3,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,  0, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  0, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  0,  0, 15, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  0,  7,  0,  0, 15, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  3,  3,  3,  0,  0,  0,  7,  0,  6,  0, 15, 15, 15 },
       {15, 15, 15, 15, 15, 15, 15,  0,  0, 11, 11,  0, 14, 14,  0,  0,  3,  3,  3,  3,  0,  0,  0, 11,  3,  3,  0,  6,  6,  0, 15, 15, 15 },
       {15, 15, 15, 15, 15,  0,  0, 11, 11, 11,  0, 14, 14, 14, 14, 14,  0,  0,  0,  0, 14,  0, 11, 11,  3,  3,  3,  0,  6,  6,  0, 15, 15 },
       {15, 15, 15, 15,  0, 11, 11, 11, 11, 11,  0, 14, 14, 14, 14, 14, 14, 14, 14, 14,  0, 11, 11, 11, 11,  3,  3,  3,  0,  6,  0, 15, 15 },
       {15,  0,  0,  0, 11, 11, 11, 11, 11,  0, 14,  0, 14, 14, 14, 14, 14, 14, 14,  0, 11, 11, 11, 11, 11,  3,  3,  3,  0,  0,  6,  0, 15 },
       { 0, 11,  3,  3,  0, 11, 11, 11, 11,  0, 14, 14,  0,  0,  0,  0,  0,  0,  0,  0, 11, 11, 11, 11, 11,  3,  3,  3,  0,  6,  0,  0, 15 },
       {15,  0,  3,  0, 11, 11, 11, 11,  0, 14, 14, 14, 14, 14, 14,  0, 14, 14, 14,  0, 11, 11, 11, 11, 11,  3,  3,  3,  0,  6,  6,  6,  0 },
       { 0, 11,  3,  3,  0,  3, 11, 11,  0, 14, 14, 14, 14, 14, 14,  0, 14, 14,  0, 11, 11,  0, 11, 11,  3,  3,  3,  0,  0,  6,  6,  6,  0 },
       {15,  0,  0,  3,  3,  3,  3,  3,  0,  0, 14, 14, 14, 14,  0, 14, 14, 14,  0, 11,  0,  3,  0,  3,  3,  3,  3,  0,  0,  6,  6,  6,  0 },
       {15, 15, 15,  0,  0,  0,  0,  0,  0,  0, 14, 14, 14, 14,  0, 14, 14,  0, 11,  3,  3,  3, 11,  0,  0,  3,  0,  7,  0,  6,  6,  6,  0 },
       {15, 15, 15,  15, 15, 15, 15,  0,  0, 14, 14, 14, 14,  0, 14, 14,  0,  3,  3,  3,  3,  3,  3,  0,  0,  8,  0,  6,  6,  6,  6,  0 }
    };
    int lowerSquirtle[18][45] = {
       {15, 15, 15, 15, 15, 15, 15, 15,  0, 14,  0, 14, 14, 14,  0, 14, 14, 14,  0,  0,  0,  0,  0,  0, 14,  0,  8,  0,  6,  6,  6,  0,  0, 15, 15, 15, 15,  0,  0,  0,15 ,15  ,15, 15,15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0, 14,  0,  0,  0,  0,  0, 14, 14, 14, 14, 14, 14,  0, 14, 14, 14,  0,  8,  0,  6,  6,  0,  6,  0, 15, 15,  0,  0, 11, 11, 11,  0,  0,15 ,15 ,15 },
       {15, 15, 15, 15, 15, 15, 15, 15,  0, 14,  0, 14, 14, 14,  0, 14,  0,  0,  0,  0,  0, 14, 14, 14, 14,  0,  8,  0,  6,  0,  6,  6,  0, 15,  0, 11, 11, 11, 11, 11, 11,  3,  0,15 , 15},
       {15, 15, 15, 15, 15, 15, 15, 15,  0,  0, 14, 14, 14, 14,  0, 14, 14, 14, 14, 14, 14,  0, 14, 14, 14, 14,  0,  7,  0,  6,  6,  0, 15,  0, 11, 11, 11, 11, 11, 11,  3,  3,  3,  0, 15},
       {15, 15, 15, 15, 15, 15, 15,  0, 11,  0, 14, 14, 14, 14,  0, 14, 14, 14, 14, 14, 14, 14,  0,  0,  0,  0,  0,  0,  0,  6,  6,  0, 15,  0,  3, 11, 11, 11,  3,  3,  3,  3,  3,  0, 15},
       {15, 15, 15, 15, 15, 15,  0, 11, 11,  0, 14, 14, 14, 14, 14,  0, 14, 14, 14, 14, 14, 14,  0, 11, 11, 11, 11, 11,  0,  6,  0, 15,  0,  3,  3,  3,  3,  0,  0,  0,  3,  3,  3,  3,  0},
       {15, 15, 15, 15, 15, 15,  0, 11, 11, 11,  0, 14, 14, 14, 14,  0, 14, 14, 14, 14, 14,  0, 11, 11, 11, 11, 11, 11, 11,  0, 15,  0,  3,  3,  3,  3,  0,  3,  3,  3,  0,  3,  3,  3,  0},
       {15, 15, 15, 15, 15, 15,  0, 11, 11, 11, 11,  0, 14, 14,  0, 14,  0, 14, 14, 14,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0,  0,  3,  3,  3,  3,  0,  3,  3,  3,  3,  3,  3,  3,  3,  0},
       {15, 15, 15, 15, 15,  0, 11, 11, 11, 11, 11,  3,  0,  0, 14, 14, 14,  0,  0, 14,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0,  3,  3,  3,  3,  3,  0,  3,  3,  3,  3,  3,  3,  3,  3,  0},
       {15, 15, 15, 15, 15,  0,  3, 11, 11, 11,  3,  3,  3,  0, 14, 14, 14, 14, 14,  0,  0, 11, 11, 11, 11, 11, 11, 11, 11,  0,  3,  3,  3,  3,  3,  0,  3,  3,  3,  3,  3,  3,  3,  0, 15},
       {15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3,  3,  3,  0, 14, 14, 14, 14, 14,  0, 11, 11, 11, 11, 11, 11, 11,  3,  0,  3,  3,  3,  3,  3,  3,  0,  3,  3,  3,  3,  3,  3,  0, 15},
       {15, 15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3,  0, 15,  0,  0,  0,  0,  0, 15,  0,  3, 11, 11, 11, 11,  3,  3,  0,  3,  3,  3,  3,  3,  3,  3,  0,  0,  3,  3,  3,  0, 15, 15},
       {15, 15, 15, 15, 15,  0, 11,  3,  3,  3,  3,  3,  3,  0, 15, 15, 15, 15, 15, 15, 15,  0,  3,  3, 11, 11, 11,  3,  3,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  0,  0,  0, 15, 15, 15},
       {15, 15, 15, 15, 15, 15,  0, 11,  3, 11,  0,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0,  0, 15, 15, 15, 15, 15},
       {15, 15, 15, 15, 15, 15, 15,  0,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  3,  3,  3,  3,  3,  3, 11,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 11,  0,  0, 11,  3,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
       {15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 15, 15,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
    };






    SetConsoleOutputCP(CP_UTF8);
    for (int y = 0; y < 28; y += 2) {
        gotoXY(a, b + y / 2);
        for (int x = 0; x < 33; x++) {
            SetColor(upperSquirtle[y + 1][x], upperSquirtle[y][x]); // Thiết lập màu
            std::cout << u8"▄";    // In ô vuông
        }
        std::cout << std::endl;
    }
    for (int y = 0; y < 18; y += 2) {
        gotoXY(a, b + 14 + y / 2);
        for (int x = 0; x < 33; x++) {
            SetColor(lowerSquirtle[y + 1][x], lowerSquirtle[y][x]); // Thiết lập màu
            std::cout << u8"▄";    // In ô vuông
        }
        std::cout << std::endl;
    }

    SetColor(7, 15);
}